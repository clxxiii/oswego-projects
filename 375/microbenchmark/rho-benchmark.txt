# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running
# Detecting actual CPU count: 88 detected
# JMH version: 1.37
# VM version: JDK 11.0.20.1, OpenJDK 64-Bit Server VM, 11.0.20.1+1-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Djmh.ignoreLock=true
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 88 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: edu.oswego.BenchmarkRunner.hwlrBlocking

# Run progress: 0.00% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: 0.074 ops/us
# Warmup Iteration   2: 0.077 ops/us
# Warmup Iteration   3: 0.077 ops/us
# Warmup Iteration   4: 0.076 ops/us
# Warmup Iteration   5: 0.076 ops/us
Iteration   1: 0.078 ops/us
Iteration   2: 0.078 ops/us
Iteration   3: 0.077 ops/us
Iteration   4: 0.077 ops/us
Iteration   5: 0.077 ops/us

# Run progress: 12.50% complete, ETA 00:11:44
# Fork: 2 of 2
# Warmup Iteration   1: 0.077 ops/us
# Warmup Iteration   2: 0.076 ops/us
# Warmup Iteration   3: 0.078 ops/us
# Warmup Iteration   4: 0.077 ops/us
# Warmup Iteration   5: 0.077 ops/us
Iteration   1: 0.076 ops/us
Iteration   2: 0.078 ops/us
Iteration   3: 0.077 ops/us
Iteration   4: 0.077 ops/us
Iteration   5: 0.077 ops/us


Result "edu.oswego.BenchmarkRunner.hwlrBlocking":
  0.077 ±(99.9%) 0.001 ops/us [Average]
  (min, avg, max) = (0.076, 0.077, 0.078), stdev = 0.001
  CI (99.9%): [0.077, 0.078] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 11.0.20.1, OpenJDK 64-Bit Server VM, 11.0.20.1+1-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Djmh.ignoreLock=true
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 88 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: edu.oswego.BenchmarkRunner.hwlrNonBlocking

# Run progress: 25.00% complete, ETA 00:10:03
# Fork: 1 of 2
# Warmup Iteration   1: 0.060 ops/us
# Warmup Iteration   2: 0.078 ops/us
# Warmup Iteration   3: 0.080 ops/us
# Warmup Iteration   4: 0.080 ops/us
# Warmup Iteration   5: 0.080 ops/us
Iteration   1: 0.079 ops/us
Iteration   2: 0.080 ops/us
Iteration   3: 0.079 ops/us
Iteration   4: 0.080 ops/us
Iteration   5: 0.081 ops/us

# Run progress: 37.50% complete, ETA 00:08:23
# Fork: 2 of 2
# Warmup Iteration   1: 0.060 ops/us
# Warmup Iteration   2: 0.078 ops/us
# Warmup Iteration   3: 0.080 ops/us
# Warmup Iteration   4: 0.080 ops/us
# Warmup Iteration   5: 0.080 ops/us
Iteration   1: 0.079 ops/us
Iteration   2: 0.079 ops/us
Iteration   3: 0.080 ops/us
Iteration   4: 0.079 ops/us
Iteration   5: 0.079 ops/us


Result "edu.oswego.BenchmarkRunner.hwlrNonBlocking":
  0.079 ±(99.9%) 0.001 ops/us [Average]
  (min, avg, max) = (0.079, 0.079, 0.081), stdev = 0.001
  CI (99.9%): [0.078, 0.081] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 11.0.20.1, OpenJDK 64-Bit Server VM, 11.0.20.1+1-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Djmh.ignoreLock=true
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 88 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: edu.oswego.BenchmarkRunner.lrhwBlocking

# Run progress: 50.00% complete, ETA 00:06:42
# Fork: 1 of 2
# Warmup Iteration   1: 0.080 ops/us
# Warmup Iteration   2: 0.080 ops/us
# Warmup Iteration   3: 0.080 ops/us
# Warmup Iteration   4: 0.080 ops/us
# Warmup Iteration   5: 0.080 ops/us
Iteration   1: 0.080 ops/us
Iteration   2: 0.080 ops/us
Iteration   3: 0.080 ops/us
Iteration   4: 0.081 ops/us
Iteration   5: 0.081 ops/us

# Run progress: 62.50% complete, ETA 00:05:02
# Fork: 2 of 2
# Warmup Iteration   1: 0.080 ops/us
# Warmup Iteration   2: 0.080 ops/us
# Warmup Iteration   3: 0.080 ops/us
# Warmup Iteration   4: 0.080 ops/us
# Warmup Iteration   5: 0.081 ops/us
Iteration   1: 0.081 ops/us
Iteration   2: 0.080 ops/us
Iteration   3: 0.080 ops/us
Iteration   4: 0.081 ops/us
Iteration   5: 0.081 ops/us


Result "edu.oswego.BenchmarkRunner.lrhwBlocking":
  0.080 ±(99.9%) 0.001 ops/us [Average]
  (min, avg, max) = (0.080, 0.080, 0.081), stdev = 0.001
  CI (99.9%): [0.080, 0.081] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 11.0.20.1, OpenJDK 64-Bit Server VM, 11.0.20.1+1-post-Ubuntu-0ubuntu122.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -Djmh.ignoreLock=true
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 88 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: edu.oswego.BenchmarkRunner.lrhwNonBlocking

# Run progress: 75.00% complete, ETA 00:03:21
# Fork: 1 of 2
# Warmup Iteration   1: 0.085 ops/us
# Warmup Iteration   2: 0.084 ops/us
# Warmup Iteration   3: 0.082 ops/us
# Warmup Iteration   4: 0.084 ops/us
# Warmup Iteration   5: 0.083 ops/us
Iteration   1: 0.085 ops/us
Iteration   2: 0.084 ops/us
Iteration   3: 0.082 ops/us
Iteration   4: 0.085 ops/us
Iteration   5: 0.083 ops/us

# Run progress: 87.50% complete, ETA 00:01:40
# Fork: 2 of 2
# Warmup Iteration   1: 0.084 ops/us
# Warmup Iteration   2: 0.083 ops/us
# Warmup Iteration   3: 0.083 ops/us
# Warmup Iteration   4: 0.083 ops/us
# Warmup Iteration   5: 0.082 ops/us
Iteration   1: 0.084 ops/us
Iteration   2: 0.082 ops/us
Iteration   3: 0.081 ops/us
Iteration   4: 0.085 ops/us
Iteration   5: 0.084 ops/us


Result "edu.oswego.BenchmarkRunner.lrhwNonBlocking":
  0.083 ±(99.9%) 0.002 ops/us [Average]
  (min, avg, max) = (0.081, 0.083, 0.085), stdev = 0.001
  CI (99.9%): [0.081, 0.085] (assumes normal distribution)


# Run complete. Total time: 00:13:26

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                         Mode  Cnt  Score   Error   Units
BenchmarkRunner.hwlrBlocking     thrpt   10  0.077 ± 0.001  ops/us
BenchmarkRunner.hwlrNonBlocking  thrpt   10  0.079 ± 0.001  ops/us
BenchmarkRunner.lrhwBlocking     thrpt   10  0.080 ± 0.001  ops/us
BenchmarkRunner.lrhwNonBlocking  thrpt   10  0.083 ± 0.002  ops/us
